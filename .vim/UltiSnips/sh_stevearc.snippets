snippet trap "trap" b!
cleanup() {
  $0
}
trap cleanup SIGINT SIGTERM EXIT
endsnippet

snippet cleanup "trap that kills child pids" b!
_kill_tree() {
  local pid
  for pid in $*; do
    local subpids="$(ps -o pid,ppid | awk '{if (\$2 == '$pid') {print \$1}}')"
    local subpid
    for subpid in $subpids; do
      _kill_tree $subpid
    done
    kill $pid || true
  done
}
cleanup() {
  _kill_tree $(jobs -p)
}
trap cleanup SIGINT SIGTERM EXIT
endsnippet

snippet main "main" b!
main() {
  $0
}

main "$@"
endsnippet

snippet getopts "getopts" b!
local usage="\$0"
while getopts "h-:" opt; do
  case $opt in
    -)
      case $OPTARG in
        *)
          echo "$usage"
          exit 1
          ;;
      esac
      ;;
    h)
      echo "$usage"
      exit 0
      ;;
    \?)
      echo "$usage"
      exit 1
      ;;
  esac
done
shift $(($OPTIND-1))
endsnippet

# vim:ft=snippets:
